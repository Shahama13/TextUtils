import React, { useState } from 'react'

export default function (props) {
    let mystyle={
        color : props.mode==='dark'? "white":"black",
        backgroundColor : props.mode==="dark"?"#252c58":"white"
    }
    

    return (
        <>
            <h1 className='my-3'>About Us</h1>
        <div className='container'style={{ padding: "0px", ...mystyle }}>
            <div className="accordion" id="accordionExample">
                <div className="accordion-item" style={mystyle}>
                    <h2 className="accordion-header">
                        <button className="accordion-button" style={mystyle} type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <strong> Analyze your text</strong>
                        </button>
                    </h2>
                    <div id="collapseOne" className="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                        <div className="accordion-body">
                            As an AI language modelbased on GPT-3.5, my responses are generated by analyzing and understanding the input text provided to me. I utilize a vast amount of training data from diverse sources, including books, articles, websites, and more, up until September 2021. This allows me to generate contextually relevant and coherent responses to a wide range of prompts. My analysis is based on patterns, correlations, and linguistic structures present in the training data. However, it's important to note that while I strive to provide accurate and helpful information, I can still generate incorrect or biased responses, so it's always advisable to verify information from reliable sources
                        </div>
                    </div>
                </div>
                <div className="accordion-item" style={mystyle}>
                    <h2 className="accordion-header">
                        <button className="accordion-button collapsed" style={mystyle} type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <strong>Free to Use</strong>
                        </button>
                    </h2>
                    <div id="collapseTwo" className="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div className="accordion-body">
                            the rise of open-source communities, and the proliferation of internet-based services. It allows individuals, businesses, and organizations to access and leverage these resources without incurring direct monetary expenses, thus enabling greater accessibility, collaboration, and innovation. However, it's important to note that the term "free to use" does not necessarily imply freedom from all restrictions or limitations, as there may be certain terms of use or licenses associated with the resource that users need to comply with
                        </div>
                    </div>
                </div>
                <div className="accordion-item" style={mystyle}>
                    <h2 className="accordion-header">
                        <button className="accordion-button collapsed" style={mystyle} type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            <strong>  Browser Compatible</strong>
                        </button>
                    </h2>
                    <div id="collapseThree" className="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div className="accordion-body">
                            This is the third item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </>
    )
}
